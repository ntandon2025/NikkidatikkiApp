/* styles.css */
body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
    
}

#header {
    display: flex;
    align-items: center;
    justify-content: space-around;
    padding: 10px;
    background-color: #f4f4f4;
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
}

#header img {
    width: 50px;
    height: 50px;
    border-radius: 25px;
}

h1 {
    text-align: center;
}

#gameContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    margin-top: 20px;
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
    box-shadow: 0 0 10px rgba(204, 80, 177, 0.5); /* Optional: shadow for some depth */
}

#maze {
    display: grid;
    grid-template-columns: repeat(20, 1fr); /* Ensure 20 columns for a 20x20 grid */
    grid-template-rows: repeat(20, 1fr); /* Ensure 20 rows */
    gap: 1px;
    width: 640px; /* Adjust based on the actual size needed */
    height: 640px;
    overflow: hidden; 

    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
    box-shadow: 0 0 10px rgba(204, 80, 177, 0.5); /* Optional: shadow for some depth */
}

.cell {
    width: 30px; /* Adjust size to fit within the container */
    height: 30px;
    border: 1px solid #666;
    box-sizing: border-box;
    
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
}

.wall {
    background-color: #333;
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
}


.start, .end, .player, .obstacle {
    display: flex;
    justify-content: center;
    align-items: center;
}

.start { background-color: green; }
.end { background-color: red; }
.player { background-color: blue; }
.obstacle { background-color: yellow; } /* Different color for obstacles */

button {
    margin: 5px;
    padding: 10px;
    font-size: 16px;
    cursor: pointer;
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
    box-shadow: 0 0 10px rgba(204, 80, 177, 0.5); /* Optional: shadow for some depth */
}

.starlight-background {
    position: fixed; /* Or absolute, depending on your layout */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1; /* Keeps the background behind other content */
    overflow: hidden; /* Keeps stars within bounds */
}

.star {
    position: absolute;
    width: 5px; /* Adjust size as needed */
    height: 5px; /* Adjust size as needed */
    border-radius: 50%; /* Makes the stars circular */
    animation: twinkle 1s infinite alternate; /* Default animation, can be overridden in JS */
}

/* Keyframes for twinkling effect */
@keyframes twinkle {
    0% { opacity: 0; }
    50% { opacity: 1; }
    100% { opacity: 0; }
}

.cell.avoider {
    background-color: red; /* Makes avoiders red */
    display: flex;
    align-items: center;
    justify-content: center;
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
}

.cell.avoider::before {
    content: '';
    display: block;
    width: 50%; /* Smaller width relative to the cell */
    height: 50%; /* Smaller height relative to the cell */
    background-color: red;
    border-radius: 50%; /* Makes it circular */
    border-image: linear-gradient(45deg, red, orange, yellow, green, blue, indigo, violet) 1; /* Apply a linear gradient as the border */
}
@media (max-width: 768px) {
    #maze {
        grid-template-columns: repeat(19, 20px); /* Smaller cells for smaller screens */
    }

    .cell {
        width: 20px;
        height: 20px;
    }

    h1, #panel p, button {
        font-size: 14px; /* Smaller text */
    }
}